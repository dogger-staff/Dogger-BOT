// ==UserScript==
// @name         狗哥娛樂-KKTIX急速購票
// @namespace    http://tampermonkey.net/
// @version      2.0
// @description  KKTIX急速購票
// @match        https://kktix.com/events/*/registrations/new
// @match        https://kktix.com/*
// @match        https://*.kktix.cc/*
// @match        https://*.kktix.cc/
// @grant        GM_setValue
// @grant        GM_getValue
// ==/UserScript==

(function() {
    'use strict';

    // 從 GM 儲存讀取參數
    const loadSettings = () => {
        return {
            quality: GM_getValue('quality', 2),
            a: GM_getValue('a', 1),
            b: GM_getValue('b', "")
        };
    };

    const saveSettings = (settings) => {
        GM_setValue('quality', settings.quality);
        GM_setValue('a', settings.a);
        GM_setValue('b', settings.b);
    };

    let { quality, a, b } = loadSettings();

    // 建立控制介面
    const controlPanel = document.createElement('div');
    controlPanel.style.position = 'fixed';
    controlPanel.style.top = '10px';
    controlPanel.style.right = '10px';
    controlPanel.style.backgroundColor = 'white';
    controlPanel.style.border = '1px solid black';
    controlPanel.style.padding = '10px';
    controlPanel.style.zIndex = '10000';

    controlPanel.innerHTML = `
        <div>
            <label>票數量 (quality): </label>
            <input id="qualityInput" type="number" value="${quality}" style="width: 50px;">
        </div>
        <div>
            <label>區域 (a): </label>
            <input id="areaInput" type="number" value="${a}" style="width: 50px;">
        </div>
        <div>
            <label>驗證碼 (b): </label>
            <input id="captchaInput" type="text" value="${b}" style="width: 100px;">
        </div>
        <button id="updateSettings">更新設定</button>
        <div id="updateMessage" style="color: green; display: none; margin-top: 10px;">更新成功！</div>
    `;

    document.body.appendChild(controlPanel);

    // 初始化介面值
    const initializeInterface = () => {
        const { quality, a, b } = loadSettings();
        document.getElementById('qualityInput').value = quality;
        document.getElementById('areaInput').value = a;
        document.getElementById('captchaInput').value = b;
    };

    initializeInterface();

    document.getElementById('updateSettings').addEventListener('click', () => {
        quality = parseInt(document.getElementById('qualityInput').value, 10) || 2;
        a = parseInt(document.getElementById('areaInput').value, 10) || 1;
        b = document.getElementById('captchaInput').value || "";

        // 將參數保存到 GM 儲存
        const newSettings = { quality, a, b };
        saveSettings(newSettings);

        // 顯示更新成功訊息
        const updateMessage = document.getElementById('updateMessage');
        updateMessage.style.display = 'block';
        setTimeout(() => {
            updateMessage.style.display = 'none';
        }, 3000);
    });

    const interval = setInterval(() => {
        const ticketUnits = document.querySelectorAll('.ticket-unit');
        if (ticketUnits.length === 0) return; // 等待票務單元加載

        let found = false;

        const checkUnit = (unit) => {
            const quantityInput = unit.querySelector('input[ng-model="ticketModel.quantity"]');
            const soldOutMessage = unit.querySelector('.sold-out-message');

            if (quantityInput && !soldOutMessage) {
                quantityInput.value = String(quality); // 設置參數中的張數
                quantityInput.dispatchEvent(new Event('input', { bubbles: true }));
                found = true;
            }
        };

        if (ticketUnits.length >= a) {
            checkUnit(ticketUnits[a - 1]);
        }

        // 如果第一個票務單元不可用，則檢查其他可購買的票務單元
        if (!found && ticketUnits.length > 0) {
            checkUnit(ticketUnits[0]);
            for (let i = 1; i < ticketUnits.length && !found; i++) {
                checkUnit(ticketUnits[i]);
            }
        }

        // 勾選同意條款
        const agreeCheckbox = document.getElementById('person_agree_terms');
        if (agreeCheckbox && !agreeCheckbox.checked) {
            agreeCheckbox.click();
        }

        // 處理驗證碼
        const captchaInput = document.querySelector('input[ng-model="conditions.custom_captcha"]');
        if (captchaInput && captchaInput.value === '') {
            captchaInput.value = b; // 自動填入驗證碼
            captchaInput.dispatchEvent(new Event('input', { bubbles: true }));
        }

        // 點擊下一步按鈕
        const nextButton = document.querySelector('button.btn-primary[ng-click="challenge()"]');
        if (nextButton && !nextButton.disabled) {
            nextButton.click();
        }
    }, 100); // 每100毫秒檢查一次
})();
